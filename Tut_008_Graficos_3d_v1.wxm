/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 17.10.1 ] */
/* [wxMaxima: title   start ]
Volume I_- Tutorial 08
Introdução aos Gráficos 3D no Maxima
   [wxMaxima: title   end   ] */


/* [wxMaxima: subsect start ]
Tutoriais do Maxima, Série Sistema de Álgebra Computacional Maxima,
versão 1, 2018
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Prólogo

* Neste tutorial iremos aprender a utilizar os comando para gerar gráficos 3D do Maxima
* Este é um tutorial elaborado para iniciantes na utilização do Maxima e wxMaxima.
* Um exemplo dos possíveis resultados gráficos é exibido abaixo como amostra: Figura 01
* Forme o hábito de sempre consultar as ajudas dos (wx)Maxima para a utilização dos comandos e de suas opções.
   [wxMaxima: comment end   ] */


/* [wxMaxima: caption start ]
D:\m_Maxima_5.prg\Tutoriais_serie\Util\Fig_008_Graficos_3d_v1.jpg
   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
jpg

   [wxMaxima: image   end   ] */


/* [wxMaxima: comment start ]
* O Maxima possui diversos recursos e opções para criar e apresentar gráficos iremos conhecer esses recursos e opções de forma
gradual e interativa neste tutorial.
* No Maxima dois pacotes(gerais) realizam a função de gerar gráficos, e ambos disponibilizam uma biblioteca de recursos completa.
* Neste tutorial abordaremos apenas um desses pacotes, contudo o pacote 'plot' é uma tão boa escolha quanto o 'draw' aqui utilizado.
* Neste texto a escolha se deu por familiaridade com o pacote 'draw', mas incentivo o leitor a explorar também o pacote 'plot'.
* O usuário tem disponíveis os dois pacotes para utilizar a sua escolha, com bons resultados em ambos.
* elementos chave: draw, wxdraw3d, explicit, user_preamble, implicit, draw options.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Informações
* referências:
[1] Königsmann, G.; Wilson, M.; Zandt J. V. The wxMaxima user’s manual, 2017 obtido em https://github.com/andrejv/wxmaxima/blob/master/info/wxmaxima.html
[2] Maxima 5.41.0 Manual, 2017 obtido em http://maxima.sourceforge.net/docs/manual/maxima.html
* citação:
Sirgado, L. A. Maxima Tutorials, Maxima Computational Algebra System Series, v. 1, 2018.
   [wxMaxima: comment end   ] */


/* [wxMaxima: section start ]
Apresentando o comando (wx)draw3d do (wx)Maxima
   [wxMaxima: section end   ] */


/* [wxMaxima: comment start ]
* a principal diferença entre o 'draw3d' e o 'wxdraw3d' é a forma de exibição, o primeiro utliza a forma padrão,
    sendo apresentado em uma janela individual (o console do GNUplot) e o segundo é integrado na área de
    trabalho do xwMaxima, sendo apresentado como parte desta. Para utilizar um ou outro basta incluir ou
    apagar o prefixo 'wx' .
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsect start ]
Gerando um gráfico simples
   [wxMaxima: subsect end   ] */


/* [wxMaxima: hide output   ] */
/* [wxMaxima: comment start ]
* o comando 'xwdraw3d' recebe a variável 'explicit' que calcula a expressão 'sech(atan(x)^2+atan(y)^2)^2' para 'x' no intervalo de -3 a 3 e para 'y' no intervalo de -3 a 0.
* a variável 'explicit' é utilizada para gerar um gráfico utilizando como entrada uma expressão explícita das variáveis indicadas.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxdraw3d(
    explicit((sech(atan(x)^2+atan(y)^2)^2),x,-3,3,y,-3,0))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* a curva traçada acima é um simil de uma encosta simétrica.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsect start ]
Gerando um gráfico simples com algumas opções de formatação
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
* o comando 'xwdraw3d' recebe a variável 'implicit' que calcula a expressão 'sech(atan(x)^2+atan(y)^2)^2' para 'x' no intervalo de -3 a 3, para 'y' no intervalo de -3 a 0 e para 'z' no intervalo de 0 a 1.1.
    * atenção com a substituição da variável 'explicit' pela variável 'implicit' e as alterações na equação e nos intervalos das variáveis.
* a variável 'implicit' é utilizada para gerar um gráfico utilizando como entrada uma expressão implícita das variáveis indicadas.
* nos comentários das linhas de opção são descritas sucintamente as formatações aplicadas.
* crie um novo documento Menu > File >New copie o exemplo abaixo e teste uma a uma as diferentes formatações no novo documento.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxdraw3d(
    line_width=0.5, /*define a espessura da linha da malha*/
    view=[75,45], /*ajusta o angulo de exibição do gráfico*/
    surface_hide=true, /*não renderiza o gráfico sob superfícies*/
    color=dark-blue, /*define a cor dos elementos abaixo*/
    title="Ventos ascendentes em elevação topográfica", /*define o título*/
    
    xlabel="L-O, km                    .", /*rótulo do eixo x*/
    ylabel=".                    N-S, km", /*rótulo do eixo y*/
    zlabel="altitude, km", /*rótulo do eixo z*/
    
    ztics=0.5, /*divisões da escala do eixo z, adicione o valor 2 para x e y como exercício*/
    
    proportional_axes='xy, /*força a mesma escala nos eixos*/
    color=dark-green, /*define a cor dos elemento abaixo*/
    
    head_length=0.1, /*define o tamanho da seta do vetor*/
    unit_vectors=true, /*força o vetor a ter um comprimento unitário, força z=10 para z=1*/
    vector([0,0,1],[0,0,10]), /*insere um vetor na coordenada [0,0,1], com dimensões [0,0,1]*/
    
    head_length=0.2, /*define o tamanho da seta do vetor*/
    unit_vectors=false, /*desabilita a opção 'unit_vectors'*/
    vector([0,-4,0.3],[0,2,0.7]), /*insere um vetor na coordenada [0,-5,0], com dimensões [0,2,1]*/
    
    color=navy, /*define a cor dos elemento abaixo*/    
    label_alignment='left, /*o ponto de inserção fica à esquerda do rótulo*/
    label(["Topo",0,0,1.1]), /*insere um rótulo em x=0,y=0,z=1.1*/
    label_alignment='left, /*o ponto de inserção fica à esquerda do rótulo*/
    label(["ventos",-1,-5,1]), /*insere um rótulo em x=0,y=0,z=1.1*/
    label_alignment='left, /*o ponto de inserção fica à esquerda do rótulo, nessa orientação, abaixo*/
    label_orientation='vertical, /*o rótulo é orientado na vertical*/
    label(["Eixo 0,0",-0.5,-0.5,1.2]), /*insere um rótulo em x=0,y=0,z=1.1*/
    
    
    color=green, /*define a cor da malha*/
    implicit(z=(sech(atan(x)^2+atan(y)^2)^2),x,-3,3,y,-6,0,z,0,1.1))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* a curva traçada acima é um simil de uma encosta simétrica.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsect start ]
Gerando um gráfico simples com contornos
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
* o comando 'xwdraw3d' recebe a variável 'explicit' que calcula a expressão 'sech(atan(x)^2+atan(y)^2)^2' para 'x' no intervalo de -3 a 3 e para 'y' no intervalo de -3 a 0.
* a variável 'explicit' é utilizada para gerar um gráfico utilizando como entrada uma expressão explícita das variáveis indicadas.
* a variável 'wxplot_size' atribui novas dimensões ao gráfico e seu valor é mantido para os demais gráficos.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot_size:[800,600]$
wxdraw3d(
    
    contour_levels=9, /*gera a escala dos contornos com nove níveis*/
    contour=both, /*gera os contornos nas curvas e suas projeções no plano x,y*/
    surface_hide=false, /*renderiza o gráfico sob superfícies expondo o 'contour' ocluso pelo gráfico*/
    
    line_width=0.25,
    color=dark-gray,
    explicit(-atan(sqrt(sin(x)^2+cos(-y)^2)),x,3,9.5,y,4.75,10.75))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* a curva traçada acima é um simil do padrão de uma espuma acústica.
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsect start ]
Gerando um gráfico simples com contornos e formatação do GNUplot
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
* a formatação do GNUplot pode ser aplicada diretamente ao gráfico utilizando as funções 'user_preamble' e 'user_preamble'
* a opção 'user_preamble' formata alguns valores diretamente no GNUplot.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxdraw3d(
    user_preamble= /*permite atribuir formatos ao GNUplot, estes são passados por uma 'string'*/
    "set title 'corrosion test # 107';
    set xlabel 'x corrosion (μm)';
    set ylabel 'y corrosion (μm)';
    set zlabel 'z corrosion (μm)' rotate by 90;
    set hidden3d;
    set key box at 7,4,14;
    set size ratio 1;
    set tmargin 1;
    set bmargin 1;
    set lmargin 1;
    set rmargin 1", /*esta string informa ao GNUplot as formatações acima*/
    contour_levels=[-2,0.5,2.5],
    contour=both,
    yrange=[-4,4], /*altera o intervalo de exibição do eixo y*/
    zrange=[-8,4], /*altera o intervalo de exibição do eixo z*/
    line_width=0.5,
    color=dark-gray,
    explicit(
        -atan((cos(y)^2)+x^5)
        +atan((sin(x)^2)+y^5),x,-6,6,y,-6,6))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Superfícies de malha com gradientes de cores na representação das curvas
   [wxMaxima: section end   ] */


/* [wxMaxima: subsect start ]
Gerando um gráfico simples com a superfície colorida
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
* a superfície das curvas pode ser colorida de acordo com uma palheta de cores
* a palheta de cores padrão pode ser substituida por uma personalizada.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxdraw3d(
    
    enhanced3d=true,
    palette=[gray, green, blue, cyan],
    cbrange=[-3,3],
    explicit(
        -atan((cos(y)^2)+x^5)
        +atan((sin(x)^2)+y^5),x,-6,6,y,-6,6))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Gerando um gráfico simples com o seu respectivo mapa bidimensional
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
* a opção 'map' permite gerar uma vista de topo do gráfico 3d.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot_size:[640,480]$
wxdraw3d(
    enhanced3d=true,
    color=green,
    cbrange=[0.1,1.1],
    explicit(atan(sin(x^3-y^2)^2+cos(y^3-x^2)^2),x,0,%pi/2,y,0,%pi/2))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw3d(
    view=map, /*gera a vista de topo do gráfico 3d evidenciando a região oculta*/
    enhanced3d=true,
    color=green,
    cbrange=[0.1,1.1],
    explicit(atan(sin(x^3-y^2)^2+cos(y^3-x^2)^2),x,0,%pi/2,y,0,%pi/2))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Aumentando a resolução da malha do gráfico
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
* a opção 'map' permite gerar uma vista de topo do gráfico 3d.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxdraw3d(
    x_voxel=20, /*dobra a resolução da malha 3d, valor inicial 10, na direção x*/
    y_voxel=20, /*dobra a resolução da malha 3d, valor inicial 10, na direção y*/
    z_voxel=20, /*dobra a resolução da malha 3d, valor inicial 10, na direção z*/
    enhanced3d=true,
    color=green,
    cbrange=[0.1,1.1],
    implicit(sqrt(z)=atan(sin(x^3-y^2)^2+cos(y^3-x^2)^2),x,0,%pi/2,y,0,%pi/2,z,0.1^2,1.1^2))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Gerando gráficos de matrizes com 'elevation_grid'
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
* a opção 'elevation_grid' permite gerar um gráfico 3d do conteúdo de uma matriz.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
counter_n: 32$
counter_m: 32$
mtrx_nm:zeromatrix(counter_n, counter_m)$
for m thru counter_m do (
        for n thru counter_n do (
            x_n:n,
            y_m:m,
                        
            setelmx(sqrt(random(2)*((m^(1/2)+n^3)+(n^(1/2)+m^3))), n, m, mtrx_nm) /*preenche a matriz*/
        )
    );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot_size:[800,600]$
wxdraw3d(
    user_preamble= /*permite atribuir formatos ao GNUplot, estes são passados por uma 'string'*/
    "set title '3D Erosion Pattern';
    set xlabel 'x (*100m)';
    set ylabel 'y (*100m)';
    set zlabel 'z (m)' rotate by 90;
    set label 'Inselberg group simulation' at 35,40,-50;
    set hidden3d;
    set key box at 350,800,500;
    set size ratio 1;
    set tmargin 1;
    set bmargin 1;
    set lmargin 1;
    set rmargin 1", /*esta string informa ao GNUplot as formatações acima*/
    surface_hide=true,
    line_width=2,
    color=dark-gray,
    palette=[brown, gray, white],
    cbrange=[0, 250],
    enhanced3d=true,
    view=[45,180-55],
    color=green,
    contour_levels=12,
    contour=surface,
elevation_grid(mtrx_nm,0,0,counter_n, counter_m),
surface_hide=true
);
/* [wxMaxima: input   end   ] */



/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
