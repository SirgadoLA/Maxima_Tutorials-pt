/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 17.10.1 ] */
/* [wxMaxima: title   start ]
Volume I - Tutorial 03
Criando expressões, equações e funções
   [wxMaxima: title   end   ] */


/* [wxMaxima: subsect start ]
Tutoriais do Maxima, Série Sistema de Álgebra Computacional Maxima,
versão 1, 2018
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Prólogo

* Neste tutorial iremos criar e manipular expressões, equações e funções no Maxima.
* Este é um tutorial elaborado para iniciantes na utilização do Maxima e wxMaxima.
* Um exemplo dos possíveis resultados gráficos é exibido abaixo como amostra: Figura 01
* Forme o hábito de sempre consultar as ajudas dos (wx)Maxima para a utilização dos comandos e de suas opções.
   [wxMaxima: comment end   ] */


/* [wxMaxima: caption start ]
Amostra do gráfico da expressão estudada na seção 2
   [wxMaxima: caption end   ] */
/* [wxMaxima: image   start ]
jpg

   [wxMaxima: image   end   ] */


/* [wxMaxima: comment start ]
* Expressões, equações e funções tem diferentes empregos e formas de utilização no Maxima.
* os operadores de atribuição e as funções do Maxima tratam e processam(ou não) de forma diferente cada uma das formas.
* antes de especificar expressões, equações e funções vamos estudar os operadores relacionados.
* elementos chave: operadores de atribuição, expressões, equações, funções e gráfico com 'draw2d'.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Informações
* referências:
[1] Königsmann, G.; Wilson, M.; Zandt J. V. The wxMaxima user’s manual, 2017 obtido em https://github.com/andrejv/wxmaxima/blob/master/info/wxmaxima.html
[2] Maxima 5.41.0 Manual, 2017 obtido em http://maxima.sourceforge.net/docs/manual/maxima.html
* citação:
Sirgado, L. A. Maxima Tutorials, Maxima Computational Algebra System Series, v. 1, 2018.
   [wxMaxima: comment end   ] */


/* [wxMaxima: section start ]
Operadores relacionados à expressões, equações e funções
   [wxMaxima: section end   ] */


/* [wxMaxima: subsect start ]
O operador de equação ' = '
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
* o operador de equação ' = ' é o responsável por separar os argumentos do lado direito e esquerdo da equação.
* esse operador define uma sequência de operadores válidos como equação.
* a equação é a forma de representação mais adequada para utilizar os recursos do Maxima
* exemplo:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a=2*b - 4*c;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
O operador de atribuição ordinária ' : '
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Operador de atribuição ordinária ' : '
    * o "ordinária" é utilizado apenas para diferenciar este operador de atribuição dos demais.
    * é utilizado para a atribuição de valores à variáveis simples.
    * é utilizado para outras atribuições(e.g. arranjo 'array') que não iremos abordar neste tutorial, ver ajuda.
        * exemplo de atribuição de valor numérico a uma variável simples:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
varA: 123;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
*  a variável 'varA' tem o valor '123' atribuido pelo operador ' : '.
    * abaixo mostramos o resultado da atribuição de 'varA'
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
varA;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* e utilizamos o valor armazenado para cálculos simples:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
varA*1; varA*0.25; varA*(1+0.25);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* ou ainda utilizamos para armazenar e manipular equações:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
eq_abc:a=2*b-4*c; /*atribui a equação no identificador*/
at(eq_abc,[b=3/2,c=3/4]); /*calcula ' a ' utilizando o identificador*/
val_a: %; /*atribui ' a=0 ' no identificador ' val_a '*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* o operador de atribuição ordinária ' : ' permite atribuir conteúdos como listas e outros.
* exemplo:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
val_lm:[str_val="l,m", l=2/3, m=4/3]; /*atribui a lista em ' val_lm '*/
at(str_val,val_lm); /*' at ' recupera os valores da lista utilizando seus identificadores*/
at(l,val_lm);
at(m,val_lm);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
O operador de definição de funções ' := '
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Operador de definição de funções ' := '
    * deve ser definido na forma nome_da_função(variável_1, ..., variável_n) := expressão.
    * ou seja, de forma simplificada: f(x):=exp_de_x
    * é utilizado para outras definições que não iremos abordar neste tutorial, ver ajuda.
* Nesta seção todas as funções apresentadas podem ser facilmente convertidas e trabalhadas como equações.
* Sempre que possível utilize a definição de equação e seus recursos, experimente convertendo estas funções.
* exemplo de definição de uma função:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
g(k):=3*k^2+9*k-27;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* e um exemplo de sua saída:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
g(1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* outro exemplo:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
circ(x,y):=sqrt((x-5)^2 + (y-5)^2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
circ(12,23);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
%, numer;       /*numer força o formato decimal*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* acima a memória ' % ' armazena a última saída de comando.
    * no nosso caso corresponde à saída da função de usuário: 'circ(12,23)'.
        * com os parâmetros ' (12,23) '.
        * para forçar o recálculo limpe a memória e recalcule todas as células.
* o modificador 'numer' força o formato decimal na saída
   [wxMaxima: comment end   ] */


/* [wxMaxima: subsect start ]
O que não fazer na definição de uma função
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
    * é importante não gerar erros utilizando de forma inadequada a definição de função.
    * e também da sua respectiva saída.
        * os erros mais comuns estão listados abaixo:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
y(x) = 2*x;     /*não utilizar o operador correto ' := '*/
y(2);           /*saída corretamente formatada, mas não avaliável*/

/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* o operador ' = ' é um operador para equações.
    * este operador separa o lado direito ' rhs '(segundo argumento),
    do lado esquerdo ' lrs '(primeiro argumento) de uma definição de equação.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
y(x) : 2*x;     /*não utilizar o operador correto ' := '*/
y(2);           /*saída corretamente formatada, mas não avaliável*/

/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
ATENÇÃO UMA CÉLULA COM ERRO INTERROMPE O FLUXO DE CÁLCULO AUTOMÁTICO !!!
* ou o erro é corrigido ou as células abaixo tem de ser calculadas uma à uma, use |Shift| e |Enter|.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
* o operador ' : ' é o operador de atribuição ordinária.
    * para mais veja a seção 1.2, acima.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
y := 2*x;       /*não indicar a área de variáveis com parêntesis ' () '*/
y 2;            /*saída: não indicar a área de variáveis com parêntesis ' () '*/

/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* a área de variáveis deve ser definida entre parêntesis ' () '.
    * tanto na entrada como na saída.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
y[x] := 2*x;    /*não indicar a área de variáveis com parêntesis ' () '*/
                /* não gera uma função, mas sim uma função de arranjo com variável indexada*/
y[2];           /*saída: não indicar a área de variáveis com parêntesis ' () '*/
y[10];          /*saída: não indicar a área de variáveis com parêntesis ' () '*/
listarray(y);   /*verificamos a criação do arranjo com a listagem de arranjos*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* a área de variáveis deve ser definida entre parêntesis ' () '.
    * tanto na entrada como na saída.
    * uma função de arranjo não é uma função ordinária, mas ambas podem utilizar o mesmo operador para definição.
   [wxMaxima: comment end   ] */


/* [wxMaxima: section start ]
Expressões no Maxima
   [wxMaxima: section end   ] */


/* [wxMaxima: comment start ]
* o que é:
* expressão é qualquer representação numérica, e ou ainda algébrica, que possa ser interpretada como uma coleção de
operadores e operandos válidos para a utilização nas funções, objetos e comandos do Maxima.
* exemplos:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
4*x^2+2*x+1;        /*isto é uma expressão*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
solve(%, x);        /*a função 'solve' também utiliza expressões*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
outro exemplo:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
4*(4*atan(1/5)-atan(1/239))$    /*isto é uma expressão*/
                                /*cálculo do PI pela fórmula de Machin*/

            /*'%' é o conteúdo armazenado da entrada da linha anterior*/
PI:%;                            /*atribui a expressão à variável 'PI'*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ev(PI, numer);      /*a função 'ev' também utiliza expressões*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
e mais outro exemplo:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
a*2*sum((1/(16*x_vl^2-16*x_vl+3)),x_vl,1,100000)$  /*isto é uma expressão*/
                           /*cálculo truncado do PI pela série de Gregory*/

               /*'%' é o conteúdo armazenado da saída da linha anterior*/
a_x_qPI:%;                     /*atribui a expressão à variável 'a_x_qPI'*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
at(a_x_qPI, a=4), numer;      /*a função 'at' também utiliza expressões*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* em algumas funções, objetos como 'solve' e 'explicit' expressões são internamente igualadas a zero, e ou ainda calculadas como equações, como neste exemplo:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d(
    line_width=2,
    color=black,
    background_color=gray,
    explicit(atan(sqrt(sin(x^3)^2-cos(x)^2)),x,3,6))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Equações no Maxima
   [wxMaxima: section end   ] */


/* [wxMaxima: comment start ]
Definição de equação no escopo do Maxima.
* equação é qualquer representação numérica, e ou ainda algébrica, que possa ser interpretada como uma coleção de operadores e operandos válidos e que utilize o operador ' = ' para separar os seus argumentos(primeiro e segundo).
* as equações são utilizadas como entrada em objetos e comandos do Maxima.
* utilizaremos a função 'solve' que encontra a(s) solução(ões) de uma equação, não iremos detalhar agora, ver ajuda do Maxima:
* exemplos:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
2*x = 7*x;          /*isto é uma equação*/
solve(2*x = 7*x,x); /*copiada e utilizada como entrada na função 'solve'*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
2*(x+1) = 7*(x+1);  /*isto é uma equação*/
solve(%);           /*sendo utilizada como entrada na função 'solve'*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq_y:(x+1)=y;       /*isto é uma equação atribuida a uma variável*/
solve(eq_y, y);     /*que é utilizada como entrada na função 'solve'*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* manter a equação na forma algébrica é uma boa prática.
    * permite utilizar a equação nas funções do Maxima de forma clara e flexível.
    * permite ainda uma melhor utilização das capacidades de manipulação algébrica de equações.
* manter as constantes armazenadas em variáveis é uma forma de implementar essa prática.
* veja abaixo um exemplo:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
                    /*variáveis podem ser utilizadas para armazenar constantes*/
                    /*a lista é criada com um elemento a mais como reserva*/
vals:[b=3.3,c=5.5,reservado1=nil];
                    
Pit:a^2+b^2=c^2;    /*isto é uma equação atribuida a uma variável*/
solve(%,a);         /*que é utilizada como entrada na função 'solve'*/
sol\+:%[2];         /*o segundo termo da solução é armazenado na variável 'sol+'*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a_vals:at(sol\+,vals);  /*sendo utilizado depois em conjunto com as variáveis*/
                        /*para fornecer a saída numérica da solução*/
vals[3]:a_vals;         /*e finalmente completamos a lista caso desejado*/
vals;                   /*substituindo o elemento 'reservado1=nil', ou seja 'vals[3]'*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
observação:
* a barra invertida ' \ ' permite incluir símbolos e espaços em identificadores.
    * exemplo de inclusão de espaço em um identificador: ' sol\ negativo ' é aceito e exibido como: ' sol negativo. '
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
var_sol:sol\-=123.6$
var_sol;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Funções no Maxima
   [wxMaxima: section end   ] */


/* [wxMaxima: comment start ]
Definição de função no escopo do Maxima.
* função é qualquer representação numérica,  algébrica, e ou ainda estrutura de programação que possa ser interpretada como uma coleção de operadores operandos, funções e comandos válidos e que utilize o operador de atribuição ' := ' para definir seu corpo.
* as funções são utilizadas para definir e individualizar estruturas de cálculo e programação no Maxima.
É recomendado, para uma melhor utilização dos recursos do Maxima, substituir o hábito de usar funções pela utilização de equações sempre que possível.
* exemplos:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
eq_h:3*k^2+9*k-18;
h(k):=eq_h; /*a variável não permite  a avaliação da expressão*/
h(5);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq_h:3*k^2+9*k-18;
h(k):=''eq_h; /*cota dupla força a avaliação da expressão*/
h(5);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
h(k):=3*k^2+9*k-18; /*a expressão é avaliada automaticamente*/
h(5);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Utilizando uma função para a atribuição de matrizes
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
f_mtrx(mtrx_indi):=( do ( /*o 'do' inicia o corpo da função*/
        mtrx_f:zeromatrix(mtrx_indi,mtrx_indi), /*cria a matriz inicial atribuindo zeros*/
        for j thru mtrx_indi do (       /*laço das colunas*/
            for i thru mtrx_indi do (   /*laço das linhas*/
                setelmx(i+j,i,j,mtrx_f) /*atribui 'i+j' para a linha 'i', coluna 'j' da matriz 'mtrx_f'*/
                )
            ),         /*o 'return' devolve a matriz criada e atribuida*/
        return(mtrx_f) /*o 'return' é um retorno local, fica melhor no 'do' inicial*/
        )
);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
a função que gera matrizes pode ser utilizada diretamente:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
f_mtrx(10);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* ou como função de atribuição de variável, para qualquer matriz quadrada:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
mtrx_f_6:f_mtrx(6)$
mtrx_f_6;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
* a função de atribuição pode ser modificada para atender a criação de outras matrizes:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
f_mtrx_H(mtrx_indi,a):=( do ( /*o 'do' inicia o corpo da função*/
        H_mtrx_f:zeromatrix(mtrx_indi,mtrx_indi), /*cria a matriz inicial atribuindo zeros*/
        for j thru mtrx_indi do (       /*laço das colunas*/
            for i thru mtrx_indi do (   /*laço das linhas*/
                setelmx(1/(-a+i+j),i,j,H_mtrx_f) /*atribui '1/(-a+i+j)' para a linha 'i', coluna 'j' da matriz 'H_mtrx_f'*/
                )
            ),         /*o 'return' devolve a matriz criada e atribuida*/
        return(H_mtrx_f) /*o 'return' é um retorno local, fica melhor no 'do' inicial*/
        )
);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
mtrx_f_H12:f_mtrx_H(6,1)$
mtrx_f_H12;
/* [wxMaxima: input   end   ] */



/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
